/**
 *
 */
package com.mavenir.vmp.config;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.InvalidPropertyException;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.stereotype.Component;

import com.mavenir.vmp.utils.DropdownUtil;

/**
 * The Class EnvironmentProperties.
 *
 * @author Vlatka, OptimIT
 */
@Component
@ConfigurationProperties(prefix = "app")
public class EnvironmentProperties {

	/** The ccps url. */
	private String ccpsUrl;

	/**
	 * Dropdown properties.
	 */
	private DropdownProperties dropdown;

	/**
	 * Data source properties.
	 */
	private DataSourceProperties database;

	/** The metric. */
	private MetricsProperties metric;

	/** The max login attempts. */
	private int maxLoginAttempts;

	/** The unlock users on startup. */
	private boolean unlockUsersOnStartup;

	/** The time format. */
	private String timeFormat;

	/** The global time format. */
	private String globalTimeFormat;

	/** The autogenerated password minimum length. */
	private int autogenPassMinLength;

	/** The autogenerated password maximum length. */
	private int autogenPassMaxLength;

	/** Flag indicating whether to use default PIN and IMAP password generation. */
	private boolean autogenPassDefaultEnabled;

	/** The vmp user. */
	private String vmpUser;
	
	/** The URL . */
	private String url;
	
	/** The resource URL */
	private String resUrl;
	
	/** The Maximum Entries for bulletin retrieve. */
	private String maxEntries;
	
	/** The Msisdn length allowed. */
	private String msisdnLength;
	
	/** Time in millis after which request times out */
	private String requestTimeout;
	
	/** Flag indicating whether to enable digest authentication */
	private boolean digestAuthEnabled;
	
	/** version of the app that this UI supports */
	private String appVersion;
	
	/** Possible options for V2T Notification types */
	private String v2tNotificationTypeValues;
	
	/** Time to live for entries in the data store */
	private int cacheTTL;
	
	/** The max number of request IDs that can be sent in the status request */
	private int statusLimit;
	
	/** The folder location in nms where voiceMail messages are stored*/
	private String mstoreVoiceMailMessageFolderId;
	
	/** The Maximum Entries for message recovery. */
	private String messageMaxEntries;
	
	/** The max size limit of any uploaded file. */
	private int maxFileSize;
	
	/** The folder location in nms where greetings messages are stored*/
	private String mstoreGreetingsMessageFolderId;
	
	/** The folder location in nms where group greetings messages are stored*/
	private String mstoreGroupGreetingsMessageFolderId;
			
	/** The request header user agent*/
	private String userAgent;

	/**
	 * Gets the ccps url.
	 *
	 * @return the ccps url
	 */
	public String getCcpsUrl() {
		return ccpsUrl;
	}

	/**
	 * Sets the ccps url.
	 *
	 * @param ccpsUrl the new ccps url
	 */
	public void setCcpsUrl(String ccpsUrl) {
		this.ccpsUrl = ccpsUrl;
	}

	/**
	 * Gets the dropdown properties.
	 *
	 * @return the dropdown properties
	 */
	public DropdownProperties getDropdown() {
		return dropdown;
	}

	/**
	 * Sets the dropdown properties.
	 *
	 * @param dropdown the new dropdown properties
	 */
	public void setDropdown(DropdownProperties dropdown) {
		this.dropdown = dropdown;
	}

	/**
	 * Gets the data source properties.
	 *
	 * @return the data source properties
	 */
	public DataSourceProperties getDatabase() {
		return database;
	}

	/**
	 * Sets the data source properties.
	 *
	 * @param dataSource the new data source properties
	 */
	public void setDatabase(DataSourceProperties dataSource) {
		this.database = dataSource;
	}

	/**
	 * Gets the metric.
	 *
	 * @return the metric
	 */
	public MetricsProperties getMetric() {
		return metric;
	}

	/**
	 * Sets the metric.
	 *
	 * @param metric the new metric
	 */
	public void setMetric(MetricsProperties metric) {
		this.metric = metric;
	}

	/**
	 * Gets the max login attempts.
	 *
	 * @return the max login attempts
	 */
	public int getMaxLoginAttempts() {
		return maxLoginAttempts;
	}

	/**
	 * Sets the max login attempts.
	 *
	 * @param maxLoginAttempts the new max login attempts
	 */
	public void setMaxLoginAttempts(int maxLoginAttempts) {
		this.maxLoginAttempts = maxLoginAttempts;
	}

	/**
	 * Checks if is the unlock users on startup.
	 *
	 * @return the unlock users on startup
	 */
	public boolean isUnlockUsersOnStartup() {
		return unlockUsersOnStartup;
	}

	/**
	 * Sets the unlock users on startup.
	 *
	 * @param unlockUsersOnStartup the new unlock users on startup
	 */
	public void setUnlockUsersOnStartup(boolean unlockUsersOnStartup) {
		this.unlockUsersOnStartup = unlockUsersOnStartup;
	}

	/**
	 * Gets the time format.
	 *
	 * @return the time format
	 */
	public String getTimeFormat() {
		return timeFormat;
	}

	/**
	 * Sets the time format.
	 *
	 * @param timeFormat the new time format
	 */
	public void setTimeFormat(String timeFormat) {
		this.timeFormat = timeFormat;
	}

	/**
	 * Gets the global time format.
	 *
	 * @return the global time format
	 */
	public String getGlobalTimeFormat() {
		return globalTimeFormat;
	}

	/**
	 * Sets the global time format.
	 *
	 * @param globalTimeFormat the new global time format
	 */
	public void setGlobalTimeFormat(String globalTimeFormat) {
		this.globalTimeFormat = globalTimeFormat;
	}

	/**
	 * Gets the autogen pass min length.
	 *
	 * @return the autogen pass min length
	 */
	public int getAutogenPassMinLength() {
		return autogenPassMinLength;
	}

	/**
	 * Sets the autogen pass min length.
	 *
	 * @param autogenPassMinLength the new autogen pass min length
	 */
	public void setAutogenPassMinLength(int autogenPassMinLength) {
		if (autogenPassMinLength < 1 || autogenPassMinLength > 255) {
			throw new InvalidPropertyException(EnvironmentProperties.class, "autogenPassMinLength",
					"autogenPassMinLength(" + autogenPassMinLength + ") property cannot be less than 1 or greater than 255");
		}
		this.autogenPassMinLength = autogenPassMinLength;
	}

	/**
	 * Gets the autogen pass max length.
	 *
	 * @return the autogen pass max length
	 */
	public int getAutogenPassMaxLength() {
		return autogenPassMaxLength;
	}

	/**
	 * Sets the autogen pass max length.
	 *
	 * @param autogenPassMaxLength the new autogen pass max length
	 */
	public void setAutogenPassMaxLength(int autogenPassMaxLength) {
		if (autogenPassMaxLength < 1 || autogenPassMaxLength > 255) {
			throw new InvalidPropertyException(EnvironmentProperties.class, "autogenPassMaxLength",
					"autogenPassMaxLength(" + autogenPassMaxLength + ") property cannot be less than 1 or greater than 255");
		}
		if (autogenPassMaxLength < this.autogenPassMinLength) {
			throw new InvalidPropertyException(EnvironmentProperties.class, "autogenPassMaxLength",
					"autogenPassMaxLength(" + autogenPassMaxLength + ") cannot be less than autogenPassMinLength(" + this.autogenPassMinLength + ")");
		}
		this.autogenPassMaxLength = autogenPassMaxLength;
	}

	/**
	 * Checks if is flag indicating whether to use default PIN and IMAP password generation.
	 *
	 * @return the flag indicating whether to use default PIN and IMAP password generation
	 */
	public boolean isAutogenPassDefaultEnabled() {
		return autogenPassDefaultEnabled;
	}

	/**
	 * Sets the flag indicating whether to use default PIN and IMAP password generation.
	 *
	 * @param autogenPassUseDefault the new flag indicating whether to use default PIN and IMAP password generation
	 */
	public void setAutogenPassDefaultEnabled(boolean autogenPassDefaultEnabled) {
		this.autogenPassDefaultEnabled = autogenPassDefaultEnabled;
	}

	public String getVmpUser() {
		return vmpUser;
	}

	public void setVmpUser(String vmpUser) {
		this.vmpUser = vmpUser;
	}

	/**
	 * Returns url value.
	 *
	 * @return the url value.
	 */
	public String getUrl() {
		return url;
	}

	/**
	 * Sets url to given value.
	 *
	 * @param url the url to set
	 */
	public void setUrl(String url) {
		this.url = url;
	}
	
	/**
	 * Returns resUrl value.
	 *
	 * @return the resUrl value.
	 */
	public String getResUrl() {
		return resUrl;
	}

	/**
	 * Sets resUrl to given value.
	 *
	 * @param resUrl the resUrl to set
	 */
	public void setResUrl(String resUrl) {
		this.resUrl = resUrl;
	}

	/**
	 * Returns maxEntries value.
	 *
	 * @return the maxEntries value.
	 */
	public String getMaxEntries() {
		return maxEntries;
	}

	/**
	 * Sets maxEntries to given value.
	 *
	 * @param maxEntries the maxEntries to set
	 */
	public void setMaxEntries(String maxEntries) {
		this.maxEntries = maxEntries;
	}

	/**
	 * Returns msisdnLength value.
	 *
	 * @return the msisdnLength value.
	 */
	public String getMsisdnLength() {
		return msisdnLength;
	}

	/**
	 * Sets msisdnLength to given value.
	 *
	 * @param msisdnLength the msisdnLength to set
	 */
	public void setMsisdnLength(String msisdnLength) {
		this.msisdnLength = msisdnLength;
	}

	/**
	 * Returns requestTimeout value.
	 *
	 * @return the requestTimeout value.
	 */
	public String getRequestTimeout() {
		return requestTimeout;
	}

	/**
	 * Sets requestTimeout to given value.
	 *
	 * @param requestTimeout the requestTimeout to set
	 */
	public void setRequestTimeout(String requestTimeout) {
		this.requestTimeout = requestTimeout;
	}

	/**
	 * Returns digestAuthEnabled value.
	 *
	 * @return the digestAuthEnabled value.
	 */
	public boolean isDigestAuthEnabled() {
		return digestAuthEnabled;
	}

	/**
	 * Sets digestAuthEnabled to given value.
	 *
	 * @param digestAuthEnabled the digestAuthEnabled to set
	 */
	public void setDigestAuthEnabled(boolean digestAuthEnabled) {
		this.digestAuthEnabled = digestAuthEnabled;
	}

	/**
	 * Returns appVersion value.
	 *
	 * @return the appVersion value.
	 */
	public String getAppVersion() {
		return appVersion;
	}

	/**
	 * Sets appVersion to given value.
	 *
	 * @param appVersion the appVersion to set
	 */
	public void setAppVersion(String appVersion) {
		this.appVersion = appVersion;
	}

	/**
	 * Returns v2tNotificationTypeValues value.
	 *
	 * @return the v2tNotificationTypeValues value.
	 */
	public String getV2tNotificationTypeValues() {
		return v2tNotificationTypeValues;
	}

	/**
	 * Sets v2tNotificationTypeValues to given value.
	 *
	 * @param v2tNotificationTypeValues the v2tNotificationTypeValues to set
	 */
	public void setV2tNotificationTypeValues(String v2tNotificationTypeValues) {
		this.v2tNotificationTypeValues = v2tNotificationTypeValues;
	}

	/**
	 * Returns cacheTTL value.
	 *
	 * @return the cacheTTL value.
	 */
	public int getCacheTTL() {
		return cacheTTL;
	}

	/**
	 * Sets cacheTTL to given value.
	 *
	 * @param cacheTTL the cacheTTL to set
	 */
	public void setCacheTTL(int cacheTTL) {
		this.cacheTTL = cacheTTL;
	}

	/**
	 * Returns statusLimit value.
	 *
	 * @return the statusLimit value.
	 */
	public int getStatusLimit() {
		return statusLimit;
	}

	/**
	 * Sets statusLimit to given value.
	 *
	 * @param statusLimit the statusLimit to set
	 */
	public void setStatusLimit(int statusLimit) {
		this.statusLimit = statusLimit;
	}
	
	/**
	 * Returns mstoreVoiceMailMessageFolderId value.
	 *
	 * @return the mstoreVoiceMailMessageFolderId value.
	 */
	public String getMstoreVoiceMailMessageFolderId() {
		return mstoreVoiceMailMessageFolderId;
	}

	/**
	 * Sets mstoreVoiceMailMessageFolderId to given value.
	 *
	 * @param mstoreVoiceMailMessageFolderId the mstoreVoiceMailMessageFolderId to set
	 */
	public void setMstoreVoiceMailMessageFolderId(String mstoreVoiceMailMessageFolderId) {
		this.mstoreVoiceMailMessageFolderId = mstoreVoiceMailMessageFolderId;
	}
	/**
	 * Returns messageMaxEntries value.
	 *
	 * @return the messageMaxEntries value.
	 */
	public String getMessageMaxEntries() {
		return messageMaxEntries;
	}

	/**
	 * Sets messageMaxEntries to given value.
	 *
	 * @param messageMaxEntries the messageMaxEntries to set
	 */
	public void setMessageMaxEntries(String messageMaxEntries) {
		this.messageMaxEntries = messageMaxEntries;
	}
	
	/**
	 * Returns maxFileSize value.
	 *
	 * @return the maxFileSize value.
	 */
	public int getMaxFileSize() {
		return maxFileSize;
	}

	/**
	 * Sets maxFileSize to given value.
	 *
	 * @param maxFileSize the maxFileSize to set
	 */
	public void setMaxFileSize(int maxFileSize) {
		this.maxFileSize = maxFileSize;
	}
	
	/**
	 * Returns mstoreGreetingsMessageFolderId value.
	 *
	 * @return the mstoreGreetingsMessageFolderId value.
	 */
	public String getMstoreGreetingsMessageFolderId() {
		return mstoreGreetingsMessageFolderId;
	}

	/**
	 * Sets mstoreGreetingsMessageFolderId to given value.
	 *
	 * @param mstoreGreetingsMessageFolderId the mstoreGreetingsMessageFolderId to set
	 */
	public void setMstoreGreetingsMessageFolderId(String mstoreGreetingsMessageFolderId) {
		this.mstoreGreetingsMessageFolderId = mstoreGreetingsMessageFolderId;
	}
	
	/**
	 * Returns mstoreGroupGreetingsMessageFolderId value.
	 *
	 * @return the mstoreGroupGreetingsMessageFolderId value.
	 */
	public String getMstoreGroupGreetingsMessageFolderId() {
		return mstoreGroupGreetingsMessageFolderId;
	}

	/**
	 * Sets mstoreGroupGreetingsMessageFolderId to given value.
	 *
	 * @param mstoreGroupGreetingsMessageFolderId the mstoreGroupGreetingsMessageFolderId to set
	 */
	public void setMstoreGroupGreetingsMessageFolderId(String mstoreGroupGreetingsMessageFolderId) {
		this.mstoreGroupGreetingsMessageFolderId = mstoreGroupGreetingsMessageFolderId;
	}

        /**
	 * Returns userAgent value.
	 *
	 * @return the userAgent value.
	 */
	public String getUserAgent() {
		return userAgent;
	}

	/**
	 * Sets userAgent to given value.
	 *
	 * @param userAgent the userAgent to set
	 */
	public void setUserAgent(String userAgent) {
		this.userAgent = userAgent;
	}

	/**
	 * The Class DropdownProperties.
	 */
	@ConfigurationProperties(prefix = "dropdown")
	public static class DropdownProperties {

		/** The class of service. */
		private String classOfService;

		/** The class of service. */
		private String allApis;

		/** The time zone. */
		private String timeZone;

		/** The apple vvm status changed. */
		private String appleVvmStatusChanged;

		/** The user login level. */
		private String userLoginLevel;

		/** The notification type. */
		private Map<String, String> notificationType;
		
		/** The language. */
		private String language;

		/** The v2tTranslationLang. */
		private String v2tTranslationLang;

		/** The missed call notification. */
		private String missedCallNotif;

		/** The greeting type. */
		private String greetingType;
		
		/** The user credentials. */
		private String usercredentials;
		
		/** The user credentials. */
		private String voicemailImportance;
		
		/** The user credentials. */
		private String voicemailSensitivity;
		
		/** The user credentials. */
		private String voicemailContentType;

		/** The subscriber blocked values. */
		private String subscriberBlockedValues;
		
		
		/** The password suppression values. */
		private String passwordSuppressValues;
		
		/** The play order values. */
		private String playOrderValues;

		/** The play message header values. */
		private String playMsgHeaderValues;
		
		/** The autoplay messages values. */
		private String autoPlayMsgValues;
		
		/** The linked listen values. */
		private String linkedListenValues;
		
		/** The prompt type values. */
		private String promptTypeValues;
		
		/** The fax feature enabled values. */
		private String faxFeatureEnabledValues;
		
		/** The auto fax print on values. */
		private String autoFaxPrintOnValues;
		
		/** The V2T ON values. */
		private String v2tOnValues;
		
		/** The V2E ON values. */
		private String v2eOnValues;
		
		/** The V2W ON values. */
		private String v2wOnValues;
		
		/** The MWI ON values. */
		private String mwiOnValues;
		
		/** The device type values. */
		private String deviceTypeValues;
		
		/** The NUT values. */
		private String nutValues;
		
		/** The delete message action values. */
		private String dltMsgActionValues;
		
		/** The OMTP ON values. */
		private String omtpVvmOnValues;
		
		/** The OMA VVM ON values. */
		private String omaVvmOnValues;
		
		/** The type of request values. */
		private String typeOfRequestValues;
		
		/** The migration status values. */
		private String migrationStatusValues;
		
		/** The forced migration values. */
		private String forcedMigrationValues;
		
		/** The notify me enabled values. */
		private String notifyMeEnabledValues;
		
		/** The subType. */
		private String subType;
		
		/** The subStatus. */
		private String subStatus;
		
		/** The operatorId. */
		private String operatorId;
		
		/**
		 * Gets the class of service.
		 *
		 * @return the class of service
		 */
		public String getClassOfService() {
			return classOfService;
		}

		/**
		 * Sets the class of service.
		 *
		 * @param classOfService the new class of service
		 */
		public void setClassOfService(String classOfService) {
			String propertyName = "app.dropdown.classOfService";
			String error = DropdownUtil.checkDropdownValidity(classOfService, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.classOfService = classOfService;
		}

		/**
		 * Returns allApis value.
		 *
		 * @return the allApis value.
		 */
		public String getAllApis() {
			return allApis;
		}

		/**
		 * Sets allApis to given value.
		 *
		 * @param allApis the allApis to set
		 */
		public void setAllApis(String allApis) {
			String propertyName = "app.dropdown.allApis";
			String error = DropdownUtil.checkDropdownValidity(allApis, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.allApis = allApis;
		}

		/**
		 * Gets the time zone.
		 *
		 * @return the time zone
		 */
		public String getTimeZone() {
			return timeZone;
		}

		/**
		 * Sets the time zone.
		 *
		 * @param timeZone the new time zone
		 */
		public void setTimeZone(String timeZone) {
			String propertyName = "app.dropdown.timeZone";
			String error = DropdownUtil.checkDropdownValidity(timeZone, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.timeZone = timeZone;
		}

		/**
		 * Gets the apple vvm status changed.
		 *
		 * @return the apple vvm status changed
		 */
		public String getAppleVvmStatusChanged() {
			return appleVvmStatusChanged;
		}

		/**
		 * Sets the apple vvm status changed.
		 *
		 * @param appleVvmStatusChanged the new apple vvm status changed
		 */
		public void setAppleVvmStatusChanged(String appleVvmStatusChanged) {
			String propertyName = "app.dropdown.appleVvmStatusChanged";
			String error = DropdownUtil.checkDropdownValidity(appleVvmStatusChanged, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.appleVvmStatusChanged = appleVvmStatusChanged;
		}

		/**
		 * Gets the user login level.
		 *
		 * @return the user login level
		 */
		public String getUserLoginLevel() {
			return userLoginLevel;
		}

		/**
		 * Sets the user login level.
		 *
		 * @param userLoginLevel the new user login level
		 */
		public void setUserLoginLevel(String userLoginLevel) {
			String propertyName = "app.dropdown.userLoginLevel";
			String error = DropdownUtil.checkDropdownValidity(userLoginLevel, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			error = DropdownUtil.checkDropdownSystemValueInteger(userLoginLevel, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.userLoginLevel = userLoginLevel;
		}

		/**
		 * Gets the notification type.
		 *
		 * @return the notification type
		 */
		public String getNotificationType() {
			return "";
		}

		/**
		 * Gets the notification type.
		 *
		 * @return the notification type
		 */
		public String getNotificationType(String cosId) {
			return notificationType.get(cosId);
		}

		/**
		 * Sets the notification type.
		 *
		 * @param notificationType the new notification type
		 */
		public void setNotificationType(String notificationType) {
			String propertyName = "app.dropdown.notificationType";
			this.notificationType = new HashMap<>();
			String[] pairs = notificationType.split(";");
			for (String pair : pairs) {
				String[] elements = pair.trim().split("::");
				String cosId = elements[0].trim();
				String notifType = elements[1].trim();
				String error = DropdownUtil.checkDropdownValidity(notifType, propertyName);
				if (!error.isEmpty()) {
					throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
				}
				this.notificationType.put(cosId, notifType);
			}
		}

		/**
		 * Gets the language.
		 *
		 * @return the language
		 */
		public String getLanguage() {
			return language;
		}

		/**
		 * Sets the language.
		 *
		 * @param language the new language
		 */
		public void setLanguage(String language) {
			String propertyName = "app.dropdown.language";
			String error = DropdownUtil.checkDropdownValidity(language, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.language = language;
		}

		/**
		 * Gets the v2tTranslationLang.
		 *
		 * @return the v2tTranslationLang
		 */
		public String getV2tTranslationLang() {
			return v2tTranslationLang;
		}

		/**
		 * Sets the v2tTranslationLang.
		 *
		 * @param v2tTranslationLang the new v2tTranslationLang
		 */
		public void setV2tTranslationLang(String v2tTranslationLang) {
			String propertyName = "app.dropdown.v2tTranslationLang";
			String error = DropdownUtil.checkDropdownValidity(v2tTranslationLang, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.v2tTranslationLang = v2tTranslationLang;
		}

		/**
		 * Gets the missed call notification.
		 *
		 * @return the missed call notification
		 */
		public String getMissedCallNotif() {
			return missedCallNotif;
		}

		/**
		 * Sets the missed call notification.
		 *
		 * @param missedCallNotif the new missed call notification
		 */
		public void setMissedCallNotif(String missedCallNotif) {
			String propertyName = "app.dropdown.missedCallNotif";
			String error = DropdownUtil.checkDropdownValidity(missedCallNotif, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.missedCallNotif = missedCallNotif;
		}

		/**
		 * Gets the greeting type.
		 *
		 * @return the greeting type
		 */
		public String getGreetingType() {
			return greetingType;
		}

		/**
		 * Sets the greeting type.
		 *
		 * @param greetingType the new greeting type
		 */
		public void setGreetingType(String greetingType) {
			String propertyName = "app.dropdown.greetingType";
			String error = DropdownUtil.checkDropdownValidity(greetingType, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.greetingType = greetingType;
		}

		/**
		 * Returns usercredentials value.
		 *
		 * @return the usercredentials value.
		 */
		public String getUsercredentials() {
			return usercredentials;
		}

		/**
		 * Sets usercredentials to given value.
		 *
		 * @param usercredentials the usercredentials to set
		 */
		public void setUsercredentials(String usercredentials) {
			String propertyName = "app.dropdown.usercredentials";
			String error = DropdownUtil.checkDropdownValidity(usercredentials, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
						
			this.usercredentials = usercredentials;
		}

		
		/**
		 * Returns voicemailImportance value.
		 *
		 * @return the voicemailImportance value.
		 */
		public String getVoicemailImportance() {
			return voicemailImportance;
		}

		/**
		 * Sets voicemailImportance to given value.
		 *
		 * @param voicemailImportance the voicemailImportance to set
		 */
		public void setVoicemailImportance(String voicemailImportance) {
			String propertyName = "app.dropdown.voicemailImportance";
			String error = DropdownUtil.checkDropdownValidity(voicemailImportance, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			
			this.voicemailImportance = voicemailImportance;
		}

		/**
		 * Returns voicemailSensitivity value.
		 *
		 * @return the voicemailSensitivity value.
		 */
		public String getVoicemailSensitivity() {
			return voicemailSensitivity;
		}

		/**
		 * Sets voicemailSensitivity to given value.
		 *
		 * @param voicemailSensitivity the voicemailSensitivity to set
		 */
		public void setVoicemailSensitivity(String voicemailSensitivity) {
			String propertyName = "app.dropdown.voicemailSensitivity";
			String error = DropdownUtil.checkDropdownValidity(voicemailSensitivity, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			
			this.voicemailSensitivity = voicemailSensitivity;
		}

		/**
		 * Returns voicemailContentType value.
		 *
		 * @return the voicemailContentType value.
		 */
		public String getVoicemailContentType() {
			return voicemailContentType;
		}

		/**
		 * Sets voicemailContentType to given value.
		 *
		 * @param voicemailContentType the voicemailContentType to set
		 */
		public void setVoicemailContentType(String voicemailContentType) {
			String propertyName = "app.dropdown.voicemailContentType";
			String error = DropdownUtil.checkDropdownValidity(voicemailContentType, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			
			this.voicemailContentType = voicemailContentType;
		}
		
		
		/**
		 * Returns subscriberBlockedValues value.
		 *
		 * @return the subscriberBlockedValues value.
		 */
		public String getSubscriberBlockedValues() {
			return subscriberBlockedValues;
		}

		/**
		 * Sets subscriberBlockedValues to given value.
		 *
		 * @param subscriberBlockedValues the subscriberBlockedValues to set
		 */
		public void setSubscriberBlockedValues(String subscriberBlockedValues) {
			String propertyName = "app.dropdown.subscriberBlockedValues";
			String error = DropdownUtil.checkDropdownValidity(subscriberBlockedValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.subscriberBlockedValues = subscriberBlockedValues;
		}

		/**
		 * Returns passwordSuppressValues value.
		 *
		 * @return the passwordSuppressValues value.
		 */
		public String getPasswordSuppressValues() {
			return passwordSuppressValues;
		}

		/**
		 * Sets passwordSuppressValues to given value.
		 *
		 * @param passwordSuppressValues the passwordSuppressValues to set
		 */
		public void setPasswordSuppressValues(String passwordSuppressValues) {
			String propertyName = "app.dropdown.passwordSuppressValues";
			String error = DropdownUtil.checkDropdownValidity(passwordSuppressValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.passwordSuppressValues = passwordSuppressValues;
		}

		/**
		 * Returns playOrderValues value.
		 *
		 * @return the playOrderValues value.
		 */
		public String getPlayOrderValues() {
			return playOrderValues;
		}

		/**
		 * Sets playOrderValues to given value.
		 *
		 * @param playOrderValues the playOrderValues to set
		 */
		public void setPlayOrderValues(String playOrderValues) {
			String propertyName = "app.dropdown.playOrderValues";
			String error = DropdownUtil.checkDropdownValidity(playOrderValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.playOrderValues = playOrderValues;
		}

		/**
		 * Returns playMsgHeaderValues value.
		 *
		 * @return the playMsgHeaderValues value.
		 */
		public String getPlayMsgHeaderValues() {
			return playMsgHeaderValues;
		}

		/**
		 * Sets playMsgHeaderValues to given value.
		 *
		 * @param playMsgHeaderValues the playMsgHeaderValues to set
		 */
		public void setPlayMsgHeaderValues(String playMsgHeaderValues) {
			String propertyName = "app.dropdown.playMsgHeaderValues";
			String error = DropdownUtil.checkDropdownValidity(playMsgHeaderValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.playMsgHeaderValues = playMsgHeaderValues;
		}

		/**
		 * Returns autoPlayMsgValues value.
		 *
		 * @return the autoPlayMsgValues value.
		 */
		public String getAutoPlayMsgValues() {
			return autoPlayMsgValues;
		}

		/**
		 * Sets autoPlayMsgValues to given value.
		 *
		 * @param autoPlayMsgValues the autoPlayMsgValues to set
		 */
		public void setAutoPlayMsgValues(String autoPlayMsgValues) {
			String propertyName = "app.dropdown.autoPlayMsgValues";
			String error = DropdownUtil.checkDropdownValidity(autoPlayMsgValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.autoPlayMsgValues = autoPlayMsgValues;
		}

		/**
		 * Returns linkedListenValues value.
		 *
		 * @return the linkedListenValues value.
		 */
		public String getLinkedListenValues() {
			
			return linkedListenValues;
		}

		/**
		 * Sets linkedListenValues to given value.
		 *
		 * @param linkedListenValues the linkedListenValues to set
		 */
		public void setLinkedListenValues(String linkedListenValues) {
			String propertyName = "app.dropdown.linkedListenValues";
			String error = DropdownUtil.checkDropdownValidity(linkedListenValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.linkedListenValues = linkedListenValues;
		}

		/**
		 * Returns promptTypeValues value.
		 *
		 * @return the promptTypeValues value.
		 */
		public String getPromptTypeValues() {
			return promptTypeValues;
		}

		/**
		 * Sets promptTypeValues to given value.
		 *
		 * @param promptTypeValues the promptTypeValues to set
		 */
		public void setPromptTypeValues(String promptTypeValues) {
			String propertyName = "app.dropdown.promptTypeValues";
			String error = DropdownUtil.checkDropdownValidity(promptTypeValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.promptTypeValues = promptTypeValues;
		}

		/**
		 * Returns faxFeatureEnabledValues value.
		 *
		 * @return the faxFeatureEnabledValues value.
		 */
		public String getFaxFeatureEnabledValues() {
			return faxFeatureEnabledValues;
		}

		/**
		 * Sets faxFeatureEnabledValues to given value.
		 *
		 * @param faxFeatureEnabledValues the faxFeatureEnabledValues to set
		 */
		public void setFaxFeatureEnabledValues(String faxFeatureEnabledValues) {
			String propertyName = "app.dropdown.faxFeatureEnabledValues";
			String error = DropdownUtil.checkDropdownValidity(faxFeatureEnabledValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.faxFeatureEnabledValues = faxFeatureEnabledValues;
		}

		/**
		 * Returns autoFaxPrintOnValues value.
		 *
		 * @return the autoFaxPrintOnValues value.
		 */
		public String getAutoFaxPrintOnValues() {
			return autoFaxPrintOnValues;
		}

		/**
		 * Sets autoFaxPrintOnValues to given value.
		 *
		 * @param autoFaxPrintOnValues the autoFaxPrintOnValues to set
		 */
		public void setAutoFaxPrintOnValues(String autoFaxPrintOnValues) {
			String propertyName = "app.dropdown.autoFaxPrintOnValues";
			String error = DropdownUtil.checkDropdownValidity(autoFaxPrintOnValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.autoFaxPrintOnValues = autoFaxPrintOnValues;
		}

		/**
		 * Returns v2tOnValues value.
		 *
		 * @return the v2tOnValues value.
		 */
		public String getV2tOnValues() {
			return v2tOnValues;
		}

		/**
		 * Sets v2tOnValues to given value.
		 *
		 * @param v2tOnValues the v2tOnValues to set
		 */
		public void setV2tOnValues(String v2tOnValues) {
			String propertyName = "app.dropdown.v2tOnValues";
			String error = DropdownUtil.checkDropdownValidity(v2tOnValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.v2tOnValues = v2tOnValues;
		}

		/**
		 * Returns v2eOnValues value.
		 *
		 * @return the v2eOnValues value.
		 */
		public String getV2eOnValues() {
			return v2eOnValues;
		}

		/**
		 * Sets v2eOnValues to given value.
		 *
		 * @param v2eOnValues the v2eOnValues to set
		 */
		public void setV2eOnValues(String v2eOnValues) {
			String propertyName = "app.dropdown.v2eOnValues";
			String error = DropdownUtil.checkDropdownValidity(v2eOnValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.v2eOnValues = v2eOnValues;
		}

		/**
		 * Returns v2wOnValues value.
		 *
		 * @return the v2wOnValues value.
		 */
		public String getV2wOnValues() {
			return v2wOnValues;
		}

		/**
		 * Sets v2wOnValues to given value.
		 *
		 * @param v2wOnValues the v2wOnValues to set
		 */
		public void setV2wOnValues(String v2wOnValues) {
			String propertyName = "app.dropdown.v2wOnValues";
			String error = DropdownUtil.checkDropdownValidity(v2wOnValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.v2wOnValues = v2wOnValues;
		}

		/**
		 * Returns mwiOnValues value.
		 *
		 * @return the mwiOnValues value.
		 */
		public String getMwiOnValues() {
			return mwiOnValues;
		}

		/**
		 * Sets mwiOnValues to given value.
		 *
		 * @param mwiOnValues the mwiOnValues to set
		 */
		public void setMwiOnValues(String mwiOnValues) {
			String propertyName = "app.dropdown.mwiOnValues";
			String error = DropdownUtil.checkDropdownValidity(mwiOnValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.mwiOnValues = mwiOnValues;
		}

		/**
		 * Returns deviceTypeValues value.
		 *
		 * @return the deviceTypeValues value.
		 */
		public String getDeviceTypeValues() {
			return deviceTypeValues;
		}

		/**
		 * Sets deviceTypeValues to given value.
		 *
		 * @param deviceTypeValues the deviceTypeValues to set
		 */
		public void setDeviceTypeValues(String deviceTypeValues) {
			String propertyName = "app.dropdown.deviceTypeValues";
			String error = DropdownUtil.checkDropdownValidity(deviceTypeValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.deviceTypeValues = deviceTypeValues;
		}

		/**
		 * Returns nutValues value.
		 *
		 * @return the nutValues value.
		 */
		public String getNutValues() {
			return nutValues;
		}

		/**
		 * Sets nutValues to given value.
		 *
		 * @param nutValues the nutValues to set
		 */
		public void setNutValues(String nutValues) {
			String propertyName = "app.dropdown.nutValues";
			String error = DropdownUtil.checkDropdownValidity(nutValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.nutValues = nutValues;
		}

		/**
		 * Returns dltMsgActionValues value.
		 *
		 * @return the dltMsgActionValues value.
		 */
		public String getDltMsgActionValues() {
			return dltMsgActionValues;
		}

		/**
		 * Sets dltMsgActionValues to given value.
		 *
		 * @param dltMsgActionValues the dltMsgActionValues to set
		 */
		public void setDltMsgActionValues(String dltMsgActionValues) {
			String propertyName = "app.dropdown.dltMsgActionValues";
			String error = DropdownUtil.checkDropdownValidity(dltMsgActionValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.dltMsgActionValues = dltMsgActionValues;
		}

		/**
		 * Returns omtpVvmOnValues value.
		 *
		 * @return the omtpVvmOnValues value.
		 */
		public String getOmtpVvmOnValues() {
			return omtpVvmOnValues;
		}

		/**
		 * Sets omtpVvmOnValues to given value.
		 *
		 * @param omtpVvmOnValues the omtpVvmOnValues to set
		 */
		public void setOmtpVvmOnValues(String omtpVvmOnValues) {
			String propertyName = "app.dropdown.omtpVvmOnValues";
			String error = DropdownUtil.checkDropdownValidity(omtpVvmOnValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.omtpVvmOnValues = omtpVvmOnValues;
		}

		/**
		 * Returns omaVvmOnValues value.
		 *
		 * @return the omaVvmOnValues value.
		 */
		public String getOmaVvmOnValues() {
			return omaVvmOnValues;
		}

		/**
		 * Sets omaVvmOnValues to given value.
		 *
		 * @param omaVvmOnValues the omaVvmOnValues to set
		 */
		public void setOmaVvmOnValues(String omaVvmOnValues) {
			String propertyName = "app.dropdown.omaVvmOnValues";
			String error = DropdownUtil.checkDropdownValidity(omaVvmOnValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.omaVvmOnValues = omaVvmOnValues;
		}

		/**
		 * Returns typeOfRequestValues value.
		 *
		 * @return the typeOfRequestValues value.
		 */
		public String getTypeOfRequestValues() {
			return typeOfRequestValues;
		}

		/**
		 * Sets typeOfRequestValues to given value.
		 *
		 * @param typeOfRequestValues the typeOfRequestValues to set
		 */
		public void setTypeOfRequestValues(String typeOfRequestValues) {
			String propertyName = "app.dropdown.typeOfRequestValues";
			String error = DropdownUtil.checkDropdownValidity(typeOfRequestValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
					
			this.typeOfRequestValues = typeOfRequestValues;
		}

		/**
		 * Returns migrationStatusValues value.
		 *
		 * @return the migrationStatusValues value.
		 */
		public String getMigrationStatusValues() {
			return migrationStatusValues;
		}

		/**
		 * Sets migrationStatusValues to given value.
		 *
		 * @param migrationStatusValues the migrationStatusValues to set
		 */
		public void setMigrationStatusValues(String migrationStatusValues) {
			String propertyName = "app.dropdown.migrationStatusValues";
			String error = DropdownUtil.checkDropdownValidity(migrationStatusValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
					
			this.migrationStatusValues = migrationStatusValues;
		}

		/**
		 * Returns forcedMigrationValues value.
		 *
		 * @return the forcedMigrationValues value.
		 */
		public String getForcedMigrationValues() {
			return forcedMigrationValues;
		}

		/**
		 * Sets forcedMigrationValues to given value.
		 *
		 * @param forcedMigrationValues the forcedMigrationValues to set
		 */
		public void setForcedMigrationValues(String forcedMigrationValues) {
			String propertyName = "app.dropdown.forcedMigrationValues";
			String error = DropdownUtil.checkDropdownValidity(forcedMigrationValues, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
					
			this.forcedMigrationValues = forcedMigrationValues;
		}

		/**
		 * Returns notifyMeEnabledValues value.
		 *
		 * @return the notifyMeEnabledValues value.
		 */
		public String getNotifyMeEnabledValues() {
			return notifyMeEnabledValues;
		}

		/**
		 * Sets notifyMeEnabledValues to given value.
		 *
		 * @param notifyMeEnabledValues the notifyMeEnabledValues to set
		 */
		public void setNotifyMeEnabledValues(String notifyMeEnabledValues) {
			this.notifyMeEnabledValues = notifyMeEnabledValues;
		}
		
		/**
		 * Gets the subType.
		 *
		 * @return the subType
		 */
		public String getSubType() {
			return subType;
		}

		/**
		 * Sets the subType.
		 *
		 * @param subType the new subType
		 */
		public void setSubType(String subType) {
			String propertyName = "app.dropdown.subType";
			String error = DropdownUtil.checkDropdownValidity(subType, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.subType = subType;
		}
	
		/**
		 * Gets the subStatus.
		 *
		 * @return the subStatus
		 */
		public String getSubStatus() {
			return subStatus;
		}

		/**
		 * Sets the subStatus.
		 *
		 * @param subStatus the new subStatus
		 */
		public void setSubStatus(String subStatus) {
			String propertyName = "app.dropdown.subStatus";
			String error = DropdownUtil.checkDropdownValidity(subStatus, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.subStatus = subStatus;
		}
		
		/**
		 * Gets the operatorId.
		 *
		 * @return the operatorId
		 */
		public String getOperatorId() {
			return operatorId;
		}

		/**
		 * Sets the operatorId.
		 *
		 * @param operatorId the new operatorId
		 */
		public void setOperatorId(String operatorId) {
			String propertyName = "app.dropdown.operatorId";
			String error = DropdownUtil.checkDropdownValidity(operatorId, propertyName);
			if (!error.isEmpty()) {
				throw new InvalidPropertyException(EnvironmentProperties.class, propertyName, error);
			}
			this.operatorId = operatorId;
		}
		
	}

	/**
	 * The Class DataSourceProperties.
	 */
	@ConfigurationProperties(prefix = "database")
	public static class DataSourceProperties {

		/** The url. */
		private String url;
		
		
		

		/** The user. */
		private String user;

		/** The password. */
		private String password;

		/**
		 * Gets the url.
		 *
		 * @return the url
		 */
		public String getUrl() {
			return url;
		}

		/**
		 * Sets the url.
		 *
		 * @param url the new url
		 */
		public void setUrl(String url) {
			this.url = url;
		}

		/**
		 * Gets the user.
		 *
		 * @return the user
		 */
		public String getUser() {
			return user;
		}

		/**
		 * Sets the user.
		 *
		 * @param user the new user
		 */
		public void setUser(String user) {
			this.user = user;
		}

		/**
		 * Gets the password.
		 *
		 * @return the password
		 */
		public String getPassword() {
			return password;
		}

		/**
		 * Sets the password.
		 *
		 * @param password the new password
		 */
		public void setPassword(String password) {
			this.password = password;
		}

		
	}

	/**
	 * The Class MetricsProperties.
	 */
	@ConfigurationProperties(prefix = "metric")
	public static class MetricsProperties {

		/** The url. */
		private String hddMountPoint;

		/**
		 * Gets the url.
		 *
		 * @return the url
		 */
		public String getHddMountPoint() {
			return hddMountPoint;
		}

		/**
		 * Sets the url.
		 *
		 * @param hddMountPoint the new url
		 */
		public void setHddMountPoint(String hddMountPoint) {
			this.hddMountPoint = hddMountPoint;
		}

	}

}
